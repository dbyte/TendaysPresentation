body {
    height: 100vh;
    display: flex;
    background: azure;
    margin: 0px;
    padding: 0px;
}

.interactiveContainer {
    position: relative;
    width: 100%;
    height: 100%;
    margin: auto; /* Forces vertical centering when width or height are less than 100% */
    padding: 0px;
    overflow: hidden;
}

.video-component {
    width: 100%;
    height: 100%;
    clip-path: none;
    top: 0;
    left: 0;
    margin: 0;
    padding: 0;
    border: none;
    object-fit: contain;
    object-position: center;
    z-index: 1;
}

/* Do not use any positioning or sizing for video overlay
objects. Instead define in HTML tags which are observerd by JS */
.button-player, .button-info {
    position: absolute;
    z-index: 2; 
    opacity: 0.7;
    /* Minimum constraints for small screen sizes */
    min-width: 25px;
    min-height: 25px;
}

.player-navigation {
  position: relative;
  margin-left: 2%;
  height: 50% !important;
  top: 25%;
  z-index: 2; 
  transition: all 0.2s ease-in-out;
  opacity: 0.6;
  animation: 0.5s ease-out 0s 1 scaleIn;
}

.main-navigation-component {
  position: absolute;
  background-color: black;
  margin: 0;
  padding: 0;
  border: 0;
  overflow: hidden;
  z-index: 1;
  /* Use rgba here instead of opacity to preserve opactity for inner elements */
  background: rgba(0,0,0,.3);
}

.main-navigation-component .desktop-hint, .main-navigation-component .touch-hint {
  position: absolute;
  color: azure;
  font-family: Arial, Helvetica, sans-serif;
  font-size: 0.9em;
  font-optical-sizing: auto;
  text-align: right;
  margin-top: 2.5%;
  right: 5%;
  opacity: 0.6;
}

@media (max-width: 450px) {
  .main-navigation-component .player-navigation {
    /* Minimum constraints for small screen sizes */
    top: 10%;
    min-height: 20px !important;
  }

  .main-navigation-component .desktop-hint, .main-navigation-component .touch-hint {
    margin-top: 1%;
  }
}

/* First desktop */
.main-navigation-component .touch-hint {
  visibility: hidden;
}
/* Then smartphones, touchscreens */
@media (hover: none) and (pointer: coarse) {
  .main-navigation-component .desktop-hint {
    visibility: hidden;
  }
  .main-navigation-component .touch-hint {
    visibility: visible;
  }
}

.main-navigation-component .player-navigation:hover {
    cursor: pointer;
    opacity: 1.0;
    transform: scale(1.15) perspective(1px);
}

.scaleIn {
    animation: 0.5s ease-out 0s 1 scaleIn;
}

.scaleOut {
  animation: 0.7s ease 0s 1 scaleOut;
  animation-fill-mode: forwards;
}

.fadeIn {
  animation: 0.4s ease-in 0s 1 fadeIn;
}

.fadeOut {
  animation: 0.4s ease 0s 1 fadeOut;
  animation-fill-mode: forwards;
}

.slideOutLeft {
  animation: 0.5s ease-in 0s 1 slideOutLeft;
  animation-fill-mode: forwards;
}

.onMouseoverAnimate {
    cursor: pointer;
    animation: 0.2s ease 0s 1 emphasizeScale;
    animation-fill-mode: forwards;
}

.onMouseoutAnimate {
    animation: 0.2s ease 0s 1 unemphasizeScale;
    animation-fill-mode: forwards;
}

@keyframes scaleIn {
    0% {
        transform: scale(0.0);
        opacity: 0;
    }
    100% {
      transform: scale(1.0);
      opacity: 0.7;
    }
  }

  @keyframes scaleOut {
    to {
        transform: scale(0.0);
        opacity: 0.0;
    }
  }

  @keyframes slideOutLeft {
    0% { transform: translateX(0%); }
    100% { transform: translateX(-100%); }
  }

  @keyframes fadeIn {
    from {
      opacity: 0.0;
    }
    to {
        opacity: 1.0;
    }
  }

  @keyframes fadeOut {
    to {
        opacity: 0.0;
    }
  }

  @keyframes emphasizeScale {
    0% {
        transform: scale(1.0);
        opacity: 0.7;
    }
    100% {
      transform: scale(1.15);
      opacity: 1.0;
    }
  }

  @keyframes unemphasizeScale {
    0% {
        transform: scale(1.15);
        opacity: 1.0;
    }
    100% {
      transform: scale(1.0);
      opacity: 0.7;
    }
  }